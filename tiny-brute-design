Tiny Brute static site generator - design


Design requirements:
 - pure html templates - no other templating language
 - No content information collected or understood by Tiny Brute, e.g. it knows nothing about published dates. All the content knowledge is in the client code, i.e. the global injectors.


Process:

Tiny Brute recursively scans the input directory.

When a file that corresponds to a static web-page is found
 - the file is parsed as TOML and a dictionary is created from it
 - a template is selected as indicated in the TOML
 - the dictionary and the specified HTML template are passed to each global injector in no specific order
 - each global injector evaluates the dictionary and (if required) injects content-specific markup into the template
 - the modified template is copied to the same relative location in the output directory

When a file that does not correspond to a static web-page is found
 - the file is copied directly to the same relative location in the output directory

Fin


Static web pages:
The default extension for files that correspond to a static web-page is .page.brute
I might implement configuration for this.



Output directories:
Random idea...
 - generating the site creates a new, probably-uniquely-named, output folder 
 - unique output directory names allow easy rollback
 - drawback: small, incremental changes between generations create many output folders

How about two modes?
 - "Generate" overwrites the "draft" folder
 - "Publish" creates a new folder

